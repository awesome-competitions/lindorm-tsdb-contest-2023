package com.alibaba.lindorm.contest.v2.tests;

import com.github.luben.zstd.Zstd;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.ByteBuffer;

public class TestZSTD {

    public static void main(String[] args) throws IOException {

        String[] glng = new String[]{
                "#iOS0K00-Oa\\mCWe8i&q#&OuC'8yK#C.CeC",
                "CmS#e'eSGK-#aSSm8.-0W4'G[8i#-0.WSa&",
                "KmiaC'S0-iiqyie.&SuGu#4-#CGK&CC4-mSO[-a\\",
                "a&mu-OKS'eOamyOS&Gy&e0i'ueu[mqKq.W'8OSWi",
                "uC&G.G8-W''8iy[8K8mqqSO'4\\4#auyGW-m",
                "S0W-.W'Sy'-&00&.4C.KO.qOGGO'KCSi\\uSG[",
                "4K[u&SKK&W[Wq.[equKyCq8qy#&iS-8a8&i-G04",
                "-8Kq.\\##&&.4[COuS0y[K0[q[&#OSyyeq",
                "K8#a&W[G#&8ym&CC4i-Gm-WWyyiy\\8'0W[a",
                "-8&.CmS#u'e8yKqiqmey[.WCK0-e&u",
                "Gu4e&0O\\.G0iWeWq.aWe'y.4'qS'Su4&#\\amu",
                "&uiaCq8uSi.SimK.We-K4\\.K4'qmGGKG",
                "G-.Kmmiy[.#'#CqW0eu[mG80-.&'ueCq#G4.4",
                "\\[-[\\-'KC44GOSm0W#qu#aa4-#CeeW-#eu[O",
                "u-CS0e440W4GOaWeyKaemS##[4#-amuu&",
                "a\\OG4\\yK\\yy80yi'4i8Ku.4&&iOqKm-GWCa4'[O",
        };
        ByteArrayOutputStream os = new ByteArrayOutputStream();
        for (String s : glng) {
//            os.write(new byte[]{(byte)( dict[s.length()+ 1])});
            os.write(s.getBytes());
        }
        double[] numbers = new double[]{5453214.744962816,5453044.359296671,5453057.866008186,5452959.062308822,5452974.301314467,5453466.793735752,5453444.211729925,5453345.697835388,5453323.148604929,5453224.076427234,5453200.337395937,5453178.044031174,5453079.240402496,5453631.714510954,5452942.498935414,5452956.871740541,5452858.3568196,5452835.792791409,5452700.901503362,5452749.91732521,5452579.515799924,5452591.883494316,5452569.301490623,5453062.641997589,5453040.059993247,5452941.274338493,5452991.735961638,5453394.132821335,5453442.862184492,5453274.715047356,5453324.019645315,5453264.482690508,5452574.400985392,5452552.703085199,5452453.899456385,5452467.406131527,5452297.002421041,5452382.704642292,5452212.265970696,5452682.448146508,5452261.282885891,5452731.482010798,5453245.611858933,5453111.008188256,5453160.31490526,5452992.166741708,5453041.184746446,5452870.492327716,5452956.465212219,5452195.090182171,5452244.107094512,5452109.505608898,5452087.7874813,5452099.868719176,5451929.753652407,5451978.771748309,5452380.879895704,5452429.916015471,5452850.790312874,5452901.251938195,5452782.986817012,5452802.448238962,5452684.185304841,5452661.889823016,5452673.952950132,5452503.567284125,5452552.296578999,5451790.649755388,5451804.156430627,5451871.3243288165,5451903.225702496,5451915.972422326,5451916.893640222,5451953.327919786,5451978.137074748,5452038.871277606,5452117.292545042,5452148.683938756,5452192.950668839,5452289.55555903,5452302.667632319,5452327.629822354,5452336.126062018,5452341.409203932,5452355.336075759,5452356.628996694,5452452.16157212,5452465.875408671,5452556.472110399,5452573.177382981,5452639.06590169,5452669.114491354,5452744.380857537,5452810.233727467,5452826.225548353,5452906.6297378205,5452983.256493918,5453034.17138995,5453121.051979111,5453150.677281888,5453209.618982319,5453269.59282082,5453312.623633652,5453396.446283847,5453477.6518141255,5453503.228734142,5453582.420265001,5453655.324377132,5453684.925563845,5453717.384058598,5453727.334510041,5453738.095717221,5453759.91356865,5453766.175959976,5453862.962565713,5453953.868126659,5453987.114117336,5454036.143634321,5454048.430681183,5454123.335384965,5454182.030396051,5454192.089943801,5454199.411206322,5454224.3872383665,5454257.294676128,5454348.585303845,5454382.034104648,5454444.175240581,5454487.76626376,5454491.280242471,5454577.241174532,5454630.037092332,5454677.045330569,5454695.964671763,5454775.328355323,5454789.166202559,5454845.053519481,5454860.745788039,5454868.790144277,5454955.120196568,5455053.94112738,5455064.558521963,5455142.9916312415,5455217.330959675,5455223.983502799,5455316.0001778165,5455389.39137881,5455455.516416134,5455508.622205803,5455575.04614073,5455613.449336789,5455678.83795386,5455739.900446539,5455819.294818546,5455897.901280879,5455922.12754041,5455958.275675372,5456024.195060867,5456027.996589726,5456124.710922146,5456186.043118559,5456204.427630803,5456224.932312082,5456294.381621184,5456328.403053741,5456405.017570357,5456419.359797567,5456499.0189667335,5456586.047062241,5456657.756904057,5456734.523146299,5456827.319321032,5456908.297084485,5456944.726682152,5456960.902433917,5457026.35564744,5457046.668389825,5457120.995215535,5457145.141252331,5457215.5972561,5457294.008445458,5457387.6310542375,5457484.683321293,5457510.240054741,5457523.5678668,5457623.087086089,5457638.0686184075,5457641.141998875,5457720.994234571,5457729.817576084,5457758.196086315,5457764.60822049,5457795.151494636,5457818.226242376,5457828.6190359015,5457897.423025089,5457906.356183764,5457929.328004315,5457930.106003009,5457963.059562517,5458049.550958958,5458113.0939908745,5458132.5252529895,5458182.633446565,5458254.847305283,5458267.792134199,5458303.905176172,5458349.230333983,5458449.094154809,5458465.949280333,5458555.466387988,5458645.723864765,5458733.901112245,5458807.384533656,5458901.378940165,5458923.8342616325,5458993.312534443,5459015.523539787,5459042.330260767,5459122.477112732,5459137.067683986,5459141.774846334,5459204.365460756,5459208.789707531,5459262.908244003,5459276.01932624,5459284.671755018,5459284.890021097,5459329.675659534,5459337.693084781,5459395.746824919,5459424.692776101,5459515.40992241,5459560.13120054,5459580.186966753,5459662.292651113,5459747.528746056,5459806.081189679,5459845.183391689,5459861.946814678,5459869.731633516,5459969.150073306,5460029.123725128,5460051.135681898,5460104.239517461,5460183.800421051,5460242.043849327,5460319.370717759,5460319.764683559,5460380.128520986,5460459.642088175,5460513.462819882,5460605.652155583,5460641.760876583,5460662.541286543,5460706.3313462995,5460743.727048594,5460762.024270955,5460763.473622419,5460774.007219057,5460841.959351505,5460939.384597856,5460941.510633809,5461005.629210561,5461018.519793313,5461068.952188082,5461133.055666655,5461175.858955553,5461207.826835119,5461251.757328674,5461350.805067039,5461441.761340959,5461506.0442092875,5461583.411668275,5461658.886361187,5461683.994595607,5461775.351942169,5461802.91603139,5461840.198390326,5461897.040984136,5461968.56743355,5462054.866353973,5462072.407991016,5462168.889826865,5462259.250253285,5462275.709744464,5462315.207024878,5462385.62041152,5462413.038029019,5462474.586533513,5462506.53014622,5462513.201992269,5462528.536655608,5462586.81028193,5462633.63903108,5462688.990716077,5462779.996416536,5462845.4714718135,5462908.200346331,5462939.3611726,5462990.394178013,5463036.986627498,5463039.188575935,5463068.270997801,5463069.648144348,5463072.899241322,5463129.468104382,5463155.096207728,5463189.155641723,5463225.942668483,5463303.272433248,5463332.798802137,5463428.020763612,5463466.755382546,5463538.518924863,5463628.695728134,5463712.609544086,5463811.102141928,5463888.800463469,5463982.444074653,5464022.157549111,5464044.918920165,5464057.427434237,5464117.413887833,5464200.432658393,5464246.957332449,5464340.934571237,5464369.940234921,5464439.263463417,5464472.884896089,5464481.143735691,5464571.126045935,5464579.697583932,5464612.229163694,5464643.370372189,5464658.608245893,5464662.860607057,5464733.126652423,5464741.734159391,5464830.371138413,5464908.353920582,5464970.36586755,5465008.522727366,5465049.392770095,5465111.581932033,5465149.498608059,5465180.396848022,5465199.53491401,5465258.586869072,5465262.085393028,5465314.460412847,5465356.3836527215,5465387.483215486,5465404.701218566,5465469.51407098,5465537.381575683,5465542.2668718165,5465552.993132498,5465648.766491323,5465704.211060023,5465801.934198855,5465813.824194927,5465877.236804799,5465957.680677569,5466049.568411948,5466143.031397166,5466149.949439785,5466217.128627514,5466229.510394194,5466250.501878497,5466332.072946122,5466406.551370009,5466415.505277634,5466477.89036454,5466550.845760024,5466578.485934365,5466632.09734155,5466643.505929232,5466653.918542144,5466737.60726805,5466828.853475132,5466899.781948689,5466901.887660761,5466946.889521439,5467012.889072611,5467037.915181638,5467046.181627602,5467070.282336805,5467094.961538663,5467156.398210398,5467172.409448549,5467195.910507821,5467230.3621939225,5467303.590657656,5467370.350650839,5467427.101244769,5467494.531237823,5467534.694528258,5467607.583501444,5467669.966636731,5467698.886348724,5467725.795298075,5467800.804050935,5467826.376629714,5467838.839621781,5467903.604791915,5467979.361122859,5468064.237293907,5468112.640849357,5468113.682983453,5468180.094315606,5468233.120653358,5468263.315966812,5468340.1613578405,5468393.1951844385,5468450.4116923865,5468518.195993314,5468586.289863168,5468598.618804884,5468666.099090703,5468733.134508426,5468794.006423863,5468882.590265657,5468921.973005206,5468960.735983982,5468984.842896001,5469008.760768026,5469057.183005934,5469153.7858410785,5469211.193832073,5469238.91198442,5469266.834753518,5469292.698472762,5469325.905827469,5469365.497310957,5469380.71581148,5469465.696557635,5469468.74110081,5469516.640386028,5469518.720219313,5469605.833522715,5469695.361589433,5469782.376589506,5469852.7621877985,5469930.128078347,5470014.850715011,5470071.622620171,5470128.961053983,5470196.592264151,5470201.732304503,5470297.914208538,5470338.08996152,5470423.051683015,5470437.327370329,5470438.117683844,5470441.637590291,5470517.592671522,5470567.1137124,5470587.098699672,5470648.806595091,5470660.717511938,5470673.723969238,5470690.78074421,5470733.440641713,5470801.926735709,5470869.29990828,5470943.07803072,5470980.978436627,5470986.46074156,5471074.4037098335,5471155.45648009,5471249.552785527,5471280.519839665,5471308.746791557,5471350.473366523,5471392.553308315,5471448.16826618,5471483.258584573,5471510.989991221,5471537.47627672,5471627.8793663485,5471640.118572977,5471699.38275758,5471757.735383415,5471841.014033036,5471925.526024081,5471932.4701236645,5472022.324827275,5472053.625474856,5472116.531070314,5472190.246073892,5472229.875606105,5472309.810679245,5472382.245273619,5472394.643546229,5472489.897511363,5472509.4325778065,5472579.498346833,5472596.5933322,5472688.191153944,5472742.869308255,5472780.643380617,5472843.92858598,5472875.1150190085,5472888.67533537,5472948.255505887,5472951.541582753,5472989.46362448,5473065.858121624,5473074.387401517,5473129.765693261,5473137.371382492,5473177.417952244,5473270.820152343,5473364.990725801,5473423.537745329,5473497.054184678,5473566.434600287,5473639.2164540365,5473734.28813585,5473826.660222037,5473887.118165984,5473982.046021612,5474043.200465573,5474048.840858386,5474130.406016468,5474225.015305456,5474231.502645197,5474255.20810946,5474347.986005196,5474438.514637516,5474536.114278887,5474555.566367664,5474613.250819916,5474656.937532763,5474682.728058918,5474734.420693643,5474783.12176778,5474849.635342368,5474880.158561064,5474933.196604212,5474974.709349041,5474993.623737833,5475005.638977932,5475066.649016718,5475091.3406840665,5475171.754415434,5475173.048574117,5475182.817576325,5475228.971644877,5475238.144768447,5475254.414533877,5475337.675789816,5475414.047601596,5475460.706977594,5475502.703594899,5475563.219919411,5475605.215646932,5475691.852083429,5475756.259088756,5475781.138004947,5475840.919343332,5475922.451284066,5476020.773371254,5476049.7795717055,5476072.64500786,5476096.686702804,5476149.170232018,5476240.017283596,5476317.643580738,5476332.284034846,5476380.255789613,5476438.885094983,5476469.480712342,5476536.365253512,5476613.884151868,5476675.065264178,5476737.438060826,5476811.987464394,5476848.49825761,5476911.503186067,5476979.343351714,5477000.974169717,5477078.5497950055,5477142.743488401,5477211.224660364,5477264.773864274,5477302.3208615165,5477399.36967583,5477466.84400949,5477564.732843529,5477617.51550507,5477676.149092432,5477679.006813316,5477756.150273063,5477800.7808526745,5477867.993752027,5477881.23125342,5477895.2834453415,5477903.9050421035};
        String numberStr = "";
        for (double number : numbers) {
            numberStr += number + ",";
        }

        byte[][] strings = new byte[][]{
                numberStr.getBytes(),
getBytes(),
                "GmyKO8&y.SyuSm8.&CeGqu&iO4e'C4e&''4&8y.mGW4'48G.mi#0&ii#Gei0\\Gm#y4[S#KqaOW.mqGmyGiqO.eiSK\\yOu0e&08'0iOW-.O#uWy#\\K'uu.qm0eyi'e-a4\\u'4SaOO#0C4K8.K.\\a48Ca[aKe[40mK[O\\C8K[SG4O['8mu[a.Wa[GCO.yWaO.y4mCW\\4qqeiiei\\#G&y\\[m[\\C-CCa\\#G[8uSy#'mOie&WaSWu".getBytes(),
                "Sy4que-8CCmiiCWSyu'eCa4GGmy4\\m4[0e&--yKSGWumeW.\\00#-.'&O-&4qiOq\\O4.\\C8yqK&qaq#OGummaaa0.-GKO'm-0i.[Oi\\8K#0#0\\ySG.SSa[8.OmCiS\\\\mSyayK&aqa..Sm'Ca[[mG-0&-''''4q[muy#G0'KWmSa#4yKme48OmKuO'[4&iG[q#4[u\\44yuq\\y#.mm8C.-K8iS[Gq[uy.-'&WK&u&4SSm'.WayWaO[OeC\\4C00&-8C&yim\\qqaeCO..uCKWaCSO-qS&-0maO-y#W''WSyeWuGy#-'&'O840O'm8iyO''eO48yyeyy[444#e8WGq#mGqmu40[GyWCC8\\&8SG8qi'GO4&Gu.8[8y.\\KOe-meW.8O'#.\\[WK#u&.S[&a#SaS'S4aC\\eu4CSyyiaGCeuq4e8iuee808u-0WeS-#G80yaOS.[4\\q0C\\8&\\y'W\\q#\\uKKWSeC\\aS[u'yyWaq0..'SS0y.yKGqKG.8yCm'4&m0--S.W0q[uam[eu-0K0S#O&-.mu'\\iaOq#0mKyS0[e-iOGSmia4SC4qyyy8ySa4S[ui#[8iS8yi4[iu8u8K[-aqy[u4&\\K0aGK#4SyKW&0.y'-'0m'\\[C&'-OWu.\\'&WCe-\\.Kq\\i[-G'Kae0WmS.m0[8-eSO[iCaK\\mm#Gy.O[i[.yG\\y[a\\#eG..iuSySGa0[aC4iG-ye8[-C\\8i#O#O[aC\\.C-W#0'OOimCu.84\\e'qaO#-\\a\\[8Kuuq'quS8KCKSOqWSKCyW[.iyKeKOiKuy0'.e[\\8OWq#quqK\\#K&SOueGSi&Cqu-.u&S#8CSmeGiuO-[OWSa&88y&iOG[&''eCum-yau-C['&GG\\[imyaOKC&8#q08mi.m[-\\aa-'W8W'4O.eK0[G8.-#-&-&\\8[4WG[umO8#OO-K[u8ae&4C'&-0&q[mGS\\0'SyG.Saei0\\0#SOeW4S[WK#4CuqC[[4Sy\\-S0.#0GqyW0['e.CO''m.-qK-8.Su#&'eWe0#m'..m&.Ki#Wu'4.\\O8'#O8m#4-#iaO'Oq-CK4i&iaWqqySe8imC\\KCy[Cq0q\\0.eu8.iyya\\ymS4aW[CCqW.ym.KCCa.imem[K#&.[8m0Wim-S[-#u'uC4qS#&8ya4&4&q'-S\\0#CGCq-'[m0uC[i0aCaqi#\\-y4-q#&&Wi0.4q-Cq8a0\\mGqmm.mi-G&'GyKm8C4Kq&K#&4[#[qGy#S4e.Ge'Cy&u-e0mu&CaW4ymi#i&.[8yy'&u4'iq[CS-[-uGa.W8[8yaaGi4#\\O'eyKa8uK\\8a..WamS['C0KS0Om[GiC#4&['G[W.i0CuyKOC[i[e-WCS8'-aCyW8[-ay8''OC\\&a8i&0-GKK0.K88[uqGy#aCSq.ye'iOe.Gmea.'4uyy#8KC0KaWS\\Wq'&q\\[\\[CmS0WiO.G\\KWy4uyWS0y&qOW4&-mqa&W#OyGuOG4a'8[8ySaC.4-0['4yGS0CG&8i\\G.Wqq'OCG44SyWSSK0K\\WyWGu-yy[u-\\-Ce.\\0iu-CO04Syme.Ky\\#08WaquGKKi'44qaq0eq[iq8u'#a.\\.0#yu-4G#0-OuGW-meu#ai&0C".getBytes(),
                "##u-[me.m4SO-uCOC0-i\\qmCauSiO8CC#a&8.\\#0y#8Ky.CO[S#S4OW.G.yWKCCC08K.my0&'a[GK.yyKmC\\K44u-yO'GWSqC\\yu'a-q-\\.KC8uO-a'Geiqmu'Wi8i0q\\iK8&44ee#q8GGmaCqOWeq'&&W8yK\\48y&uSW-y-a\\4KCWei#qO[4a4.OuCGi#Ci[\\4\\[#O&Se-yKaaGW&-y4'u44ii'O4Suu4meCCaa.yWeWyW-K[SCay&Ce'm[-8imy0[[C8u4K0GW'4-y.#a\\.i08Wu'&.S[4iqa[8KiC4CuqGKK-aCGyCWeiqK\\a4S0.imi#4'CqW&qK\\&a'04[yOSCeqG&W[\\-CiS&ua.KCGK&#K\\auqmq'Gu.GuiyCC-G8S#0q#aCO000W[-u-iG8['Kqqu#\\\\m#SO0CWS8KWu[-WaS#iGi'CO'\\eWCG[-WGW4e8ae8iC4&-uO&8u4\\Cy0#\\KKC[\\[#OOi".getBytes(),
                os.toByteArray(),
                "".getBytes()
        };

        ByteArrayOutputStream is = new ByteArrayOutputStream();
        for (int i = 0; i < strings.length - 1; i ++){
            is.write(strings[i]);
        }
        strings[strings.length - 1] = is.toByteArray();

        for (int i = 0; i < strings.length; i ++){
            byte[] input = strings[i];
            byte[] compressed = Zstd.compress(input, 11);
            byte[] decompressed = new byte[500000];
            Zstd.decompress(decompressed, compressed);
            System.out.println(compressed.length + "/" + input.length + "=" + (compressed.length * 1.0 / input.length));
            String originalText = new String(decompressed);
//            System.out.println("Original Text: " + originalText);
        }

//        for (int i = 0; i < strings.length; i ++){
//            byte[] input = strings[i];
//
//            ByteBuffer srcBuffer = ByteBuffer.allocateDirect(input.length);
//            ByteBuffer encodeBuffer = ByteBuffer.allocateDirect(input.length);
//            ByteBuffer decodeBuffer = ByteBuffer.allocateDirect(input.length);
//
//            srcBuffer.put(input);
//            srcBuffer.flip();
//            Deflate.compress(encodeBuffer, srcBuffer);
//            encodeBuffer.flip();
//            int compressed = encodeBuffer.remaining();
//
//            Deflate.decompress(decodeBuffer, encodeBuffer);
//            decodeBuffer.flip();
//
//            System.out.println(compressed+ "/" + input.length + "=" + (compressed * 1.0 / input.length));
//
//            byte[] decompressed = new byte[decodeBuffer.remaining()];
//            decodeBuffer.get(decompressed);
//
//            String originalText = new String(decompressed);
//            System.out.println("Original Text: " + originalText);
//        }

    }
}
